
@using EAP_Assignment.Models;
@using PagedList.Mvc;


<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@*@model IEnumerable<Account>*@

@{

    ViewBag.Title = "Quản lý thành viên";

    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";

}

@using (Html.BeginForm("Index", "ManagerUser", FormMethod.Get))
{
    <p>
        Search : @Html.TextBox("SearchKeyword")
        <input type="submit" value="Search" />
        <a href="/Admin/ManageUser/Index"> Back to Full List</a>
    </p>

}

<div class="row">

    <div class="col-sm-12">

        <h2>@ViewBag.Title</h2>

        <hr />

        <table class="table table-borderer">

            <thead>

                <tr>

                    <th>@Html.ActionLink("Username", "Index", new { SortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })</th>

                    <th>@Html.ActionLink("Email", "Index", new { SortOrder = ViewBag.EmailSortParm, currentFilter = ViewBag.CurrentFilter })</th>

                    @*<th>Gender</th>*@

                    <th>Date Of Birth</th>

                    <th></th>

                </tr>

            </thead>

            <tbody>

                @foreach (var item in Model)

                {

                    <tr>

                        <td>@item.UserName</td>

                        <td>@item.Email</td>

                        @*<td>@(item.Gender == true ? "Nam" : "Nữ")</td>*@


                        <td>

                            @Html.ActionLink("Sửa thông tin", "Edit", new { Id = item.Id }, null) |

                            @Html.ActionLink("Sửa quyền", "EditRole", new { Id = item.Id }, null) |

                            @Html.ActionLink("Xóa", "Delete", new { Id = item.Id }, null)

                        </td>

                    </tr>

                }

            </tbody>

        </table>

    </div>

</div>

<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager((PagedList.IPagedList)Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))